{
    "comment": "Copy JSON file with  system description and add required config section, see below",

    "division": "closed",
    "submitter": "LtechKorea",
    "status": "preview",
    "system_type":"datacenter",
    "system_name": "L4210S-10G_Pytorch_Int8",

    "number_of_nodes": "1",
    "host_processor_model_name": "TBD",
    "host_processors_per_node": "2",
    "host_processor_core_count": "56",
    "host_processor_frequency": "",
    "host_processor_caches": "",
    "host_memory_configuration": "8 slots / 32GB each / 3200 MT/s per socket",
    "host_memory_capacity": "??GB",
    "host_storage_capacity": "",
    "host_storage_type": "",
    "host_processor_interconnect": "",
    "host_networking": "",
    "host_networking_topology": "",

    "accelerators_per_node": "0",
    "accelerator_model_name": "N/A",
    "accelerator_frequency": "",
    "accelerator_host_interconnect": "",
    "accelerator_interconnect": "",
    "accelerator_interconnect_topology": "",
    "accelerator_memory_capacity": "N/A",
    "accelerator_memory_configuration": "",
    "accelerator_on-chip_memories": "",
    "cooling": "",
    "hw_notes": "",

    "framework": "Pytorch",
    "operating_system": "Ubuntu 20.04.1 LTS",
    "other_software_stack": "5.4.0-45-generic",
    "sw_notes": "",

    "config": {
        "comment": [
            "Those parameters needed to provide paths to",
            "logs_dir               - path to output log files (Required)",
            "compliance_output_dir  - path to output directory for compliance verification (Required in case you going to run compliance verification)",
            "dtype                  - data type (int8, bfloat16, float32, etc.) (Required)",
            "accuracy               - model accuracy (Optional)",
            "scenario               - benchmar scenarion (Server, Offline) (Required)",
            "system                 - system name (Required)",
            "topology               - topology name (3d-unet, bert, dlrm, resnet50, rnnt, ssd-mobilenet, ssd-resnet34) (Required)",
            "export                 - add environment variables (Optional)",
            "mlperf_path            - path to clonned mlcommons/inference git (Required)",
            "redirect_output        - if True redirect to console all output, if False - only errors (Optional)"
        ],

        "logs_dir": "/opt/data/sangwoo/mlperf_logs",
        "dtype": "int8",
        "accuracy": "99.9",
        "scenario": "Offline",
        "system": "L4210S-10G",
        "topology": "3d-unet",
        "env": [ { "LD_LIBRARY_PATH": "$LD_LIBRARY_PATH:/root/git/mlperf_ext_ov_cpp_v1.0/lib_3d_unet" } ],
        "mlperf_path": "./",
        "redirect_output": "False",

        "comment_exec": [
            "name                   - string to display while running script (Required)",
            "cmd                    - command to execute (Required)",
            "dir                    - current directory (Optional)",
            "skip                   - 1,yes,True - skip execution (Optional)"
        ],

        "exec": [
            {
                "name": "Performace benchmark",
                "cmd": "$RUNNER_DIR/run-3d-unet.sh",
                "dir": "$PERFORMANCE/RUN_1_DIR"
            },

            {
                "name": "Accuracy benchmark",
                "cmd": "$RUNNER_DIR/run-3d-unet.sh accuracy",
                "dir": "$ACCURACY_DIR"
            },
            {
                "name": "Accuracy check",
                "cmd": "$PYTHON $WORK_DIR/accuracy-brats.py --log_file $ACCURACY_DIR/mlperf_log_accuracy.json --preprocessed_data_dir $BUILD_DIR/preprocessed_data --postprocessed_data_dir $BUILD_DIR/postprocessed_data --label_data_dir $BUILD_DIR/raw_data/nnUNet_raw_data/Task043_BraTS2019/labelsTr --output_dtype float16",
                "dir": "$ACCURACY_DIR",
                "save_output": "accuracy.txt"
            },

            {
                "name": "Compliance TEST01",
                "dir": "$TEST01_TMP_DIR",
                "cmd": "$RUNNER_DIR/run-3d-unet.sh TEST01"
            },

            {
                "name": "Compliance TEST04-A",
                "dir": "$TEST04-A_TMP_DIR",
                "cmd": "$RUNNER_DIR/run-3d-unet.sh TEST04-A"
            },

            {
                "name": "Compliance TEST04-B",
                "dir": "$TEST04-B_TMP_DIR",
                "cmd": "$RUNNER_DIR/run-3d-unet.sh TEST04-B"
            },

            {
                "name": "Compliance TEST05",
                "dir": "$TEST05_TMP_DIR",
                "cmd": "$RUNNER_DIR/run-3d-unet.sh TEST05"
            },

            {
                "name": "Verification TEST01",
                "cmd": "$PYTHON $MLPERF_COMPL/TEST01/run_verification.py -r $RESULTS_DIR -c $TEST01_TMP_DIR -o $COMPLIANCE_DIR --dtype float16"
            },

            {
                "name": "Verification TEST04-A, TEST04-B",
                "cmd": "$PYTHON $MLPERF_COMPL/TEST04-A/run_verification.py -a $TEST04-A_TMP_DIR -b $TEST04-B_TMP_DIR -o $COMPLIANCE_DIR"
            },

            {
                "name": "Verification TEST05",
                "cmd": "$PYTHON $MLPERF_COMPL/TEST05/run_verification.py -r $RESULTS_DIR -c $TEST05_TMP_DIR -o $COMPLIANCE_DIR"
            },

            {
                "name": "Verification TEST05",
                "cmd": "$PYTHON $MLPERF_COMPL/TEST05/run_verification.py -r $RESULTS_DIR -c $TEST05_TMP_DIR -o $COMPLIANCE_DIR"
            }
        ],

        "comment_aliases": [
            "Aliases to replace in cmd, dir string from exec block"
        ],

        "aliases": {
            "$PYTHON": "/usr/bin/python3",
            "$MLPERF_SRC_TOP": "/home/sangwoo/mlperf-inference",
            "$MLPERF_COMPL": "/home/sangwoo/mlperf-inference/compliance/nvidia",
	          "$RUNNER_DIR": "/home/sangwoo/mlperf-inference/tools/submission_runner",
	          "$WORK_DIR": "/home/sangwoo/mlperf-inference/vision/medical_imaging/3d-unet-brats19",
	          "$BUILD_DIR": "/home/sangwoo/mlperf-inference/vision/medical_imaging/3d-unet-brats19/build",
	          "$DATA_DIR": "/opt/data/Dataset/BraTS_2019_Data_Training/MICCAI_BraTS_2019_Data_Training"

        }
    }
}
